{"version":3,"sources":["components/header.js","components/jumboTron.js","components/card.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Image","src","rounded","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","JContainer","Jumbotron","fluid","Container","Badge","Cards","Fragment","Row","Col","Card","Img","Body","Title","Text","App","Carousel","Item","alt","Caption","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.52d2804a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar,Nav,Image } from 'react-bootstrap';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Header m-2 fixed-top\">\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n                <Navbar.Brand href=\"#home\"> <Image src=\"https://fbcd.co/product-lg/26800be69dc981df38d57328c4b4772c_resize.jpg\" rounded width=\"200\" height=\"50\"/></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                    <Nav>\r\n                        <Nav.Link href=\"#home\">HOME</Nav.Link>\r\n                        <Nav.Link href=\"#features\">PRODUCTS</Nav.Link>\r\n                        <Nav.Link href=\"#pricing\">ABOUT US</Nav.Link>                        \r\n                    </Nav>                    \r\n                </Navbar.Collapse>\r\n                <Image src=\"https://w7.pngwing.com/pngs/670/451/png-transparent-grey-logistics-logo-delivery-courier-freight-transport-computer-icons-cargo-symbols-delivery-miscellaneous-angle-company.png\" rounded width=\"200\" height=\"50\"/>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Jumbotron, Container,Badge } from 'react-bootstrap';\r\n\r\nfunction JContainer() {\r\n    return (\r\n\r\n        <Jumbotron fluid>\r\n            <Container className=\"text-center\">\r\n                <h1>MAJOR SERVICES</h1>\r\n                <Badge variant=\"warning\" className=\"px-4\"> </Badge>\r\n                <p>\r\n                Lorem ipsum dolor sit amet, consectetuer adipiscing elit enean commodo eget dolor aenean massa eget dolor aenean massa\r\n                </p>\r\n            </Container>\r\n        </Jumbotron>\r\n\r\n    );\r\n}\r\n\r\nexport default JContainer;\r\n","import React from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Cards() {\r\n    return (\r\n        <React.Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Card >\r\n                            <Card.Img variant=\"top\" src=\"https://webassets.tomtom.com/m/5460d6e3bc5f7d9/original/OG-Image-Fleet-Management-Logistics-industries_1200x630.jpg\" width=\"100\" height=\"180\" />\r\n                            <Card.Body>\r\n                                <Card.Title>OCEAN FREIGHT</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of\r\n                                    the card's content.\r\n                                 </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card >\r\n                            <Card.Img variant=\"top\" src=\"https://www.wagenborg.com/media/2225/ff82890.jpg\" width=\"100\" height=\"180\" />\r\n                            <Card.Body>\r\n                                <Card.Title>ROADWAY FREIGHT</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of\r\n                                    the card's content.\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Img variant=\"top\" src=\"https://lh3.googleusercontent.com/proxy/PD_jQXlRylK4KmAb1l829miNRrW57KCbLFJN9O-LOiwhpAWFAXbWfR82ocJ3AHLEfjShprcDb8I6Ja4aXYaGBhdPeIbnEhld7k8AeNFXvWYLJpw1vuxqvXgtouHi8yFKuEyjpH-cfA\" width=\"100\" height=\"180\" />\r\n                            <Card.Body>\r\n                                <Card.Title>AIR FREIGHT</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of\r\n                                    the card's content.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\nimport Header from './components/header';\nimport JContainer from './components/jumboTron';\nimport Cards from './components/card';\nimport { Container, Row, Col, Carousel } from 'react-bootstrap';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Carousel>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://www.fortitude-gl.com/wp-content/uploads/2019/08/evergreen_vessel01-1024x481.jpg\"\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            <h3>First slide label</h3>\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://www.freightos.com/wp-content/uploads/2016/08/ship_air.jpg\"\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>Second slide label</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"https://www.logisticsmgmt.com/images/LM1806_SUP_3PL_SHIP_inline1.jpg\"\n            alt=\"Third slide\"\n          />\n\n          <Carousel.Caption>\n            <h3>Third slide label</h3>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      <JContainer />\n      <Cards/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}